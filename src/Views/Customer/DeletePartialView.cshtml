@model Triton.FleetManagement.Web.Models.CustomerViewModel


@using (Html.BeginForm("DeleteCustomer", "Customer", FormMethod.Post))
{
    <div class="modal-body">
        <div class="form-group">
            <label for="editCardNameLabel" class="input-label">Name</label>
            @Html.DisplayFor(x => x.CustomerModel.Customer.Name, new { @class = "form-control", @readonly = "readonly" })
        </div>
        <div class="form-group">
            <label for="editCardNameLabel" class="input-label">VAT Registration</label>
            @Html.DisplayFor(x => x.CustomerModel.Customer.VatRegistration, new { @class = "form-control", @readonly = "readonly" })
        </div>
        <div class="form-group">
            <label for="editCardNameLabel" class="input-label">Credit Limit</label>
            @Html.DisplayFor(x => x.CustomerModel.Customer.CreditLimit, new { @class = "form-control", @readonly = "readonly" })
        </div>
        <div class="form-group">
            <label for="editCardNameLabel" class="input-label">Loyalty Spend</label>
            @Html.DisplayFor(x => x.CustomerModel.Customer.LoyaltySpend, new { @class = "form-control", @readonly = "readonly" })
        </div>
        <div class="form-group">
            <label for="editCardNameLabel" class="input-label">Physical Address 2</label>
            @Html.DisplayFor(x => x.CustomerModel.Customer.PhysicalAddress1, new { @class = "form-control", @readonly = "readonly" })
        </div>
        <div class="form-group">
            <label for="editCardNameLabel" class="input-label">Physical Address 2</label>
            @Html.DisplayFor(x => x.CustomerModel.Customer.PhysicalAddress2, new { @class = "form-control", @readonly = "readonly" })
        </div>
        <div class="form-group">
            <label for="editCardNameLabel" class="input-label">Suburb</label>
            @Html.DisplayFor(x => x.CustomerModel.Customer.PhysicalSuburb, new { @class = "form-control", @readonly = "readonly" })
        </div>
        <div class="form-group">
            <label for="editCardNameLabel" class="input-label">Postal Code</label>
            @Html.DisplayFor(x => x.CustomerModel.Customer.PhysicalPostalCode, new { @class = "form-control", @readonly = "readonly" })
        </div>

        @Html.HiddenFor(x => x.CustomerModel.Customer.CustomerID)
        @Html.HiddenFor(x => x.CustomerModel.Customer.Name)
        @Html.HiddenFor(x => x.CustomerModel.Customer.VatRegistration)
        @Html.HiddenFor(x => x.CustomerModel.Customer.CreditLimit)
        @Html.HiddenFor(x => x.CustomerModel.Customer.LoyaltySpend)
        @Html.HiddenFor(x => x.CustomerModel.Customer.LoyaltyStatusLCID)
        @Html.HiddenFor(x => x.CustomerModel.Customer.AccountStatusTypeLCID)
        @Html.HiddenFor(x => x.CustomerModel.Customer.CustomerTypeLCID)
        @Html.HiddenFor(x => x.CustomerModel.Customer.PhysicalAddress1)
        @Html.HiddenFor(x => x.CustomerModel.Customer.PhysicalAddress2)
        @Html.HiddenFor(x => x.CustomerModel.Customer.PhysicalSuburb)
        @Html.HiddenFor(x => x.CustomerModel.Customer.PhysicalPostalCode)
        @Html.HiddenFor(x => x.CustomerModel.Customer.PostalAddress1)
        @Html.HiddenFor(x => x.CustomerModel.Customer.PostalAddress2)
        @Html.HiddenFor(x => x.CustomerModel.Customer.PostalSuburb)
        @Html.HiddenFor(x => x.CustomerModel.Customer.PostalCode)
        @Html.HiddenFor(x => x.CustomerModel.Customer.CreatedOn)
        @Html.HiddenFor(x => x.CustomerModel.Customer.CreatedByUserID)
        @Html.HiddenFor(x => x.CustomerModel.Customer.CompanyID)
        @Html.HiddenFor(x => x.CustomerModel.Customer.CompanyRegistration)
    </div>
    <div class="modal-footer">
        <div class="d-flex justify-content-end">
            <button type="button" class="btn btn-white mr-2" data-dismiss="modal">Cancel</button>
            <input type="submit" value="Delete" class="btn btn-danger" />
        </div>
    </div>
}